#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApplication1.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BlogBase")]
	public partial class LinqBlogDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttagi(tagi instance);
    partial void Updatetagi(tagi instance);
    partial void Deletetagi(tagi instance);
    partial void Insertpost(post instance);
    partial void Updatepost(post instance);
    partial void Deletepost(post instance);
    partial void Insertkomentarz(komentarz instance);
    partial void Updatekomentarz(komentarz instance);
    partial void Deletekomentarz(komentarz instance);
    #endregion
		
		public LinqBlogDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BlogBaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqBlogDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqBlogDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqBlogDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqBlogDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ustawienia> ustawienias
		{
			get
			{
				return this.GetTable<ustawienia>();
			}
		}
		
		public System.Data.Linq.Table<tagi> tagis
		{
			get
			{
				return this.GetTable<tagi>();
			}
		}
		
		public System.Data.Linq.Table<post> posts
		{
			get
			{
				return this.GetTable<post>();
			}
		}
		
		public System.Data.Linq.Table<komentarz> komentarzs
		{
			get
			{
				return this.GetTable<komentarz>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ustawienia")]
	public partial class ustawienia
	{
		
		private string _grupa;
		
		private string _nazwa;
		
		private string _wartosc;
		
		public ustawienia()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grupa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string grupa
		{
			get
			{
				return this._grupa;
			}
			set
			{
				if ((this._grupa != value))
				{
					this._grupa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this._nazwa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wartosc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string wartosc
		{
			get
			{
				return this._wartosc;
			}
			set
			{
				if ((this._wartosc != value))
				{
					this._wartosc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tagi")]
	public partial class tagi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_posta;
		
		private string _keywords;
		
		private string _description;
		
		private EntityRef<post> _post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_postaChanging(int value);
    partial void Onid_postaChanged();
    partial void OnkeywordsChanging(string value);
    partial void OnkeywordsChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public tagi()
		{
			this._post = default(EntityRef<post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_posta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_posta
		{
			get
			{
				return this._id_posta;
			}
			set
			{
				if ((this._id_posta != value))
				{
					if (this._post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_postaChanging(value);
					this.SendPropertyChanging();
					this._id_posta = value;
					this.SendPropertyChanged("id_posta");
					this.Onid_postaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywords", DbType="VarChar(50)")]
		public string keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnkeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("keywords");
					this.OnkeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_tagi", Storage="_post", ThisKey="id_posta", OtherKey="ID", IsForeignKey=true)]
		public post post
		{
			get
			{
				return this._post.Entity;
			}
			set
			{
				post previousValue = this._post.Entity;
				if (((previousValue != value) 
							|| (this._post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._post.Entity = null;
						previousValue.tagi = null;
					}
					this._post.Entity = value;
					if ((value != null))
					{
						value.tagi = this;
						this._id_posta = value.ID;
					}
					else
					{
						this._id_posta = default(int);
					}
					this.SendPropertyChanged("post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.post")]
	public partial class post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _tytul;
		
		private string _tresc;
		
		private System.Nullable<int> _status;
		
		private System.DateTime _data_dodania;
		
		private System.Nullable<System.DateTime> _data_modyfikacji;
		
		private EntityRef<tagi> _tagi;
		
		private EntitySet<komentarz> _komentarzs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntytulChanging(string value);
    partial void OntytulChanged();
    partial void OntrescChanging(string value);
    partial void OntrescChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void Ondata_dodaniaChanging(System.DateTime value);
    partial void Ondata_dodaniaChanged();
    partial void Ondata_modyfikacjiChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_modyfikacjiChanged();
    #endregion
		
		public post()
		{
			this._tagi = default(EntityRef<tagi>);
			this._komentarzs = new EntitySet<komentarz>(new Action<komentarz>(this.attach_komentarzs), new Action<komentarz>(this.detach_komentarzs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tytul", DbType="VarChar(156)")]
		public string tytul
		{
			get
			{
				return this._tytul;
			}
			set
			{
				if ((this._tytul != value))
				{
					this.OntytulChanging(value);
					this.SendPropertyChanging();
					this._tytul = value;
					this.SendPropertyChanged("tytul");
					this.OntytulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tresc", DbType="VarChar(MAX)")]
		public string tresc
		{
			get
			{
				return this._tresc;
			}
			set
			{
				if ((this._tresc != value))
				{
					this.OntrescChanging(value);
					this.SendPropertyChanging();
					this._tresc = value;
					this.SendPropertyChanged("tresc");
					this.OntrescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_dodania", DbType="Date NOT NULL")]
		public System.DateTime data_dodania
		{
			get
			{
				return this._data_dodania;
			}
			set
			{
				if ((this._data_dodania != value))
				{
					this.Ondata_dodaniaChanging(value);
					this.SendPropertyChanging();
					this._data_dodania = value;
					this.SendPropertyChanged("data_dodania");
					this.Ondata_dodaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_modyfikacji", DbType="Date")]
		public System.Nullable<System.DateTime> data_modyfikacji
		{
			get
			{
				return this._data_modyfikacji;
			}
			set
			{
				if ((this._data_modyfikacji != value))
				{
					this.Ondata_modyfikacjiChanging(value);
					this.SendPropertyChanging();
					this._data_modyfikacji = value;
					this.SendPropertyChanged("data_modyfikacji");
					this.Ondata_modyfikacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_tagi", Storage="_tagi", ThisKey="ID", OtherKey="id_posta", IsUnique=true, IsForeignKey=false)]
		public tagi tagi
		{
			get
			{
				return this._tagi.Entity;
			}
			set
			{
				tagi previousValue = this._tagi.Entity;
				if (((previousValue != value) 
							|| (this._tagi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tagi.Entity = null;
						previousValue.post = null;
					}
					this._tagi.Entity = value;
					if ((value != null))
					{
						value.post = this;
					}
					this.SendPropertyChanged("tagi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_komentarz", Storage="_komentarzs", ThisKey="ID", OtherKey="id_posta")]
		public EntitySet<komentarz> komentarzs
		{
			get
			{
				return this._komentarzs;
			}
			set
			{
				this._komentarzs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_komentarzs(komentarz entity)
		{
			this.SendPropertyChanging();
			entity.post = this;
		}
		
		private void detach_komentarzs(komentarz entity)
		{
			this.SendPropertyChanging();
			entity.post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.komentarz")]
	public partial class komentarz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _id_posta;
		
		private string _tresc;
		
		private string _autor;
		
		private System.DateTime _data_dodania;
		
		private System.Nullable<int> _status;
		
		private EntityRef<post> _post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onid_postaChanging(int value);
    partial void Onid_postaChanged();
    partial void OntrescChanging(string value);
    partial void OntrescChanged();
    partial void OnautorChanging(string value);
    partial void OnautorChanged();
    partial void Ondata_dodaniaChanging(System.DateTime value);
    partial void Ondata_dodaniaChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public komentarz()
		{
			this._post = default(EntityRef<post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_posta", DbType="Int NOT NULL")]
		public int id_posta
		{
			get
			{
				return this._id_posta;
			}
			set
			{
				if ((this._id_posta != value))
				{
					if (this._post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_postaChanging(value);
					this.SendPropertyChanging();
					this._id_posta = value;
					this.SendPropertyChanged("id_posta");
					this.Onid_postaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tresc", DbType="VarChar(404) NOT NULL", CanBeNull=false)]
		public string tresc
		{
			get
			{
				return this._tresc;
			}
			set
			{
				if ((this._tresc != value))
				{
					this.OntrescChanging(value);
					this.SendPropertyChanging();
					this._tresc = value;
					this.SendPropertyChanged("tresc");
					this.OntrescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string autor
		{
			get
			{
				return this._autor;
			}
			set
			{
				if ((this._autor != value))
				{
					this.OnautorChanging(value);
					this.SendPropertyChanging();
					this._autor = value;
					this.SendPropertyChanged("autor");
					this.OnautorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_dodania", DbType="Date NOT NULL")]
		public System.DateTime data_dodania
		{
			get
			{
				return this._data_dodania;
			}
			set
			{
				if ((this._data_dodania != value))
				{
					this.Ondata_dodaniaChanging(value);
					this.SendPropertyChanging();
					this._data_dodania = value;
					this.SendPropertyChanged("data_dodania");
					this.Ondata_dodaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_komentarz", Storage="_post", ThisKey="id_posta", OtherKey="ID", IsForeignKey=true)]
		public post post
		{
			get
			{
				return this._post.Entity;
			}
			set
			{
				post previousValue = this._post.Entity;
				if (((previousValue != value) 
							|| (this._post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._post.Entity = null;
						previousValue.komentarzs.Remove(this);
					}
					this._post.Entity = value;
					if ((value != null))
					{
						value.komentarzs.Add(this);
						this._id_posta = value.ID;
					}
					else
					{
						this._id_posta = default(int);
					}
					this.SendPropertyChanged("post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
